{# src/Sdz/BlogBundle/Resources/views/Blog/form.html.twig #}

<h3>Formulaire d'article</h3>

<div class="well">
    {{ form_start(form, {'method': 'POST', 'action': '', 'attr': {'id': 'form', 'class': 'form-horizontal'}}) }}

        {# Les erreurs générales du formulaire. #}
        {{ form_errors(form) }}

        {# Génération du label + error + widget pour un champ. #}
        {{ form_row(form.date) }}

        {# Génération manuelle et éclatée : #}
        <div class="form-group">
            {# Génération du label. #}
            {{ form_label(form.title, "Titre de l'article", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}

            {# Affichage des erreurs pour ce champ précis. #}
            {{ form_errors(form.title) }}

            <div class="col-sm-10">
                {# Génération de l'input. #}
                {{ form_widget(form.title, {'attr': {'class': 'form-control'}}) }}
            </div>
        </div>

        {# Idem pour un autre champ. #}
        <div class="form-group">
            {{ form_label(form.content, "Contenu de l'article", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
            {{ form_errors(form.title) }}
            <div class="col-sm-10">
                {{ form_widget(form.content, {'attr': {'class': 'form-control'}}) }}
            </div>
        </div>

        <div class="form-group">
            {{ form_label(form.author, "Auteur", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
            {{ form_errors(form.author) }}
            <div class="col-sm-10">
                {{ form_widget(form.author, {'attr': {'class': 'form-control'}}) }}
            </div>
        </div>
        {# form_row(form.author) #}
        {{ form_row(form.published) }}
       <div class="col-sm-12">
        {{ form_row(form.image) }}
      </div>

     <div class="col-sm-12">
        {{ form_row(form.categories) }}
        <a href="#" id="add_category" class="btn btn-success">Ajouter une cat&eacute;gorie</a>
         <br> <br>
     </div>


      {# Pour le bouton, pas de label ni d'erreur, on affiche juste le widget #}
      {{ form_widget(form.save, {'attr': {'class': 'btn btn-primary'}}) }}
        {# Génération automatique des champs pas encore écrits.
                  Dans cet exemple, ce serait le champ CSRF (géré automatiquement par Symfony !)
                  et tous les champs cachés (type « hidden »). #}
      {{ form_rest(form) }}



        {# form_widget(form) #}


    {# Fermeture de la balise <form> du formulaire HTML #}
    {{ form_end(form) }}

</div>

<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>

<script type="text/javascript">
    $(document).ready(function() {
        // On récupère la balise <div> en question qui contient l'attribut « data-prototype » qui nous intéresse.
        var $container = $('div#sdz_blogbundle_article_categories');

        $container.addClass("col-sm-12");

        // On définit un compteur unique pour nommer les champs qu'on va ajouter dynamiquement
        var index = $container.find(':input').length;

        // On ajoute un nouveau champ à chaque clic sur le lien d'ajout.
        $('#add_category').click(function(e) {
            addCategory($container);

            e.preventDefault(); // évite qu'un # apparaisse dans l'URL
            return false;
        });

        // On ajoute un premier champ automatiquement s'il n'en existe pas déjà un (cas d'un nouvel article par exemple).
        if (index == 0) {
            addCategory($container);
        } else {
            // S'il existe déjà des catégories, on ajoute un lien de suppression pour chacune d'entre elles
            $container.children('div').each(function() {
                addDeleteLink($(this));
            });
        }

        // La fonction qui ajoute un formulaire CategoryType
        function addCategory($container) {
            // Dans le contenu de l'attribut « data-prototype », on remplace :
            // - le texte "__name__label__" qu'il contient par le label du champ
            // - le texte "__name__" qu'il contient par le numéro du champ
            var template = $container.attr('data-prototype')
                            .replace(/__name__label__/g, 'Cat&eacute;gorie n&deg;' + (index+1))
                            .replace(/__name__/g,        index)
                    ;

            // On crée un objet jquery qui contient ce template
            var $prototype = $(template);

            // On ajoute au prototype un lien pour pouvoir supprimer la catégorie
            addDeleteLink($prototype);

            // On ajoute le prototype modifié à la fin de la balise <div>
            $container.append($prototype);

            // Enfin, on incrémente le compteur pour que le prochain ajout se fasse avec un autre numéro
            index++;
        }

        // La fonction qui ajoute un lien de suppression d'une catégorie
        function addDeleteLink($prototype) {
            // Création du lien
            var $deleteLink = $('<a href="#" class="btn btn-danger">Supprimer</a>');

            // Ajout du lien
            $prototype.append($deleteLink);

            // Ajout du listener sur le clic du lien pour effectivement supprimer la catégorie
            $deleteLink.click(function(e) {
                $prototype.remove();

                e.preventDefault(); // évite qu'un # apparaisse dans l'URL
                return false;
            });
        }
    });
</script>